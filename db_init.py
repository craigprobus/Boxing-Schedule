import psycopg2


class Database:
    def get_db_connection(self, conn):
        conn = psycopg2.connect(database="boxing-schedule",
                                host="localhost",
                                user="craigprobus",
                                password="",
                                port="5432")
        return conn

    def create_table_boxer(self):
        script_create_table = '''CREATE TABLE boxer (
                                    id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY UNIQUE,
                                    name text,
                                    profile_url text,
                                    weight_division text,
                                    rank_pound_for_pound  int,
                                    rank_weight_division int
                                )'''
        return script_create_table

    def create_table_fight(self):
        script_create_table = '''CREATE TABLE FIGHT (
                                    id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY UNIQUE,
                                    fight_date DATE,
                                    platform_network text,
                                    location text,
                                    fight_1 integer REFERENCES boxer(id),
                                    fighter_2 integer REFERENCES boxer(id)
                                )'''
        return script_create_table

    def init(self):
        conn = None
        cursor = None
        try:
            conn = self.get_db_connection(conn)
            print(f'conn status <{conn.status}>. creating cursor...')
            cursor = conn.cursor()
            cursor.execute(self.create_table_boxer())
            cursor.execute(self.create_table_fight())
            conn.commit()
            print(f'tables created')
        except Exception as e:
            print(e)
        finally:
            if cursor is not None:
                cursor.close()
            if conn is not None:
                conn.close()

db = Database()
db.init()